steps:
    # Copies env set in Cloud Build into the file system for docker to run with correct vars
    - name: "gcr.io/cloud-builders/yarn:current"
      args:
          - "set-env"
          - "WS_SERVER_HOST=${_WS_SERVER_HOST}"
          - "WS_SERVER_PORT=${_WS_SERVER_PORT}"
          - "STRAPI_SERVER_HOST=${_STRAPI_SERVER_HOST}"
          - "STRAPI_BEARER_TOKEN=${_STRAPI_BEARER_TOKEN}"
          - "LOGGER_LEVEL=${_LOGGER_LEVEL}"
          - "PROJECT_ID=${PROJECT_ID}"
      id: "set-env"
      dir: "frontend"

    - name: gcr.io/cloud-builders/docker
      args:
          - build
          - "--no-cache"
          - "-t"
          - "$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA"
          - frontend
          - "-f"
          - frontend/Dockerfile
      id: Build
      waitFor: ["set-env"]

    - name: gcr.io/cloud-builders/docker
      args:
          - push
          - "$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA"
      id: Push
    - name: "gcr.io/google.com/cloudsdktool/cloud-sdk:slim"
      args:
          - run
          - services
          - update
          - $_SERVICE_NAME
          - "--platform=managed"
          - "--image=$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA"
          - >-
              --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID,$_LABELS
          - "--region=$_DEPLOY_REGION"
          - "--quiet"
      id: Deploy
      entrypoint: gcloud
timeout: 3600s
images:
    - "$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA"
# tags:
#     - gcp-cloud-build-deploy-cloud-run
#     - gcp-cloud-build-deploy-cloud-run-managed
#     - thepit-game-front
